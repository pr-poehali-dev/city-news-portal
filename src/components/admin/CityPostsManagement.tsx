import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';

const AI_FUNCTION_URL = 'https://functions.poehali.dev/d7440490-2756-4be6-9013-fc14e99c0a76';
const SCHEDULER_URL = 'https://functions.poehali.dev/1e3b546d-9d3e-48cc-987f-5db39cab2ed5';

export const CityPostsManagement = () => {
  const [loading, setLoading] = useState(false);
  const [posts, setPosts] = useState<any[]>([]);
  const [lastGeneration, setLastGeneration] = useState<string | null>(null);

  const loadTodaysPosts = async () => {
    setLoading(true);
    try {
      const response = await fetch(AI_FUNCTION_URL);
      if (response.ok) {
        const data = await response.json();
        setPosts(Array.isArray(data) ? data : []);
        toast.success('–ü–æ—Å—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      } else {
        toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–æ–≤');
      }
    } catch (error) {
      console.error('Error loading posts:', error);
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å—Ç—ã');
    } finally {
      setLoading(false);
    }
  };

  const generatePosts = async () => {
    setLoading(true);
    try {
      const response = await fetch(`${AI_FUNCTION_URL}?action=generate`);
      if (response.ok) {
        const data = await response.json();
        setLastGeneration(new Date().toLocaleString('ru-RU'));
        toast.success(data.message || '–ü–æ—Å—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        await loadTodaysPosts();
      } else {
        const error = await response.json();
        toast.error(error.error || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
      }
    } catch (error) {
      console.error('Error generating posts:', error);
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç—ã');
    } finally {
      setLoading(false);
    }
  };

  const triggerScheduler = async () => {
    setLoading(true);
    try {
      const response = await fetch(SCHEDULER_URL);
      if (response.ok) {
        const data = await response.json();
        toast.success(data.message || '–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω');
        if (data.message.includes('generated')) {
          await loadTodaysPosts();
        }
      } else {
        toast.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞');
      }
    } catch (error) {
      console.error('Error triggering scheduler:', error);
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫');
    } finally {
      setLoading(false);
    }
  };

  const getTimeIcon = (timeOfDay: string) => {
    const icons: Record<string, string> = {
      '—É—Ç—Ä–æ': 'Sunrise',
      '–¥–µ–Ω—å': 'Sun',
      '–≤–µ—á–µ—Ä': 'Sunset'
    };
    return icons[timeOfDay] || 'Clock';
  };

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="MessageCircle" />
            AI-–∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä "–ì–æ—Ä–æ–¥ –≥–æ–≤–æ—Ä–∏—Ç"
          </CardTitle>
          <CardDescription>
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ AI-–ø–æ—Å—Ç–∞–º–∏ –æ—Ç –∏–º–µ–Ω–∏ –≥–æ—Ä–æ–¥–∞. –ì–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ 3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å (8:00, 14:00, 20:00)
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex flex-wrap gap-3">
            <Button
              onClick={loadTodaysPosts}
              disabled={loading}
              variant="outline"
              className="gap-2"
            >
              <Icon name="RefreshCw" className={loading ? 'animate-spin' : ''} />
              –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            </Button>
            
            <Button
              onClick={generatePosts}
              disabled={loading}
              className="gap-2"
            >
              <Icon name="Sparkles" />
              –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å 3 –ø–æ—Å—Ç–∞ —Å–µ–π—á–∞—Å
            </Button>
            
            <Button
              onClick={triggerScheduler}
              disabled={loading}
              variant="secondary"
              className="gap-2"
            >
              <Icon name="Clock" />
              –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
            </Button>
          </div>

          {lastGeneration && (
            <div className="text-sm text-muted-foreground">
              –ü–æ—Å–ª–µ–¥–Ω—è—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: {lastGeneration}
            </div>
          )}

          <div className="p-4 rounded-lg bg-muted/50 space-y-2">
            <div className="flex items-start gap-2">
              <Icon name="Info" size={16} className="mt-0.5 text-primary" />
              <div className="text-sm space-y-1">
                <p><strong>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è:</strong></p>
                <ul className="list-disc list-inside space-y-1 text-muted-foreground">
                  <li>–§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –¥–µ–Ω—å</li>
                  <li>OpenAI –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç 3 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–∞ (—É—Ç—Ä–æ/–¥–µ–Ω—å/–≤–µ—á–µ—Ä)</li>
                  <li>–ü–æ—Å—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</li>
                  <li>–ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç ‚Äî –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏</li>
                </ul>
              </div>
            </div>
          </div>

          {posts.length > 0 && (
            <div className="space-y-3">
              <h3 className="font-semibold">–ü–æ—Å—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è ({posts.length})</h3>
              <div className="grid gap-3">
                {posts.map((post) => (
                  <Card key={post.id} className="p-4">
                    <div className="flex items-start gap-3">
                      <div className="p-2 rounded-full bg-primary/10">
                        <Icon name={getTimeIcon(post.timeOfDay)} className="text-primary" size={20} />
                      </div>
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-2">
                          <span className="font-semibold capitalize">{post.timeOfDay}</span>
                          <span className="text-xs px-2 py-0.5 rounded-full bg-primary/10 text-primary">
                            {post.mood}
                          </span>
                          <span className="text-xs text-muted-foreground">
                            {new Date(post.timestamp).toLocaleString('ru-RU')}
                          </span>
                        </div>
                        <p className="text-sm mb-2">{post.text}</p>
                        <span className="text-xs text-muted-foreground">üìç {post.location}</span>
                      </div>
                    </div>
                  </Card>
                ))}
              </div>
            </div>
          )}

          {posts.length === 0 && !loading && (
            <div className="text-center py-8 text-muted-foreground">
              <Icon name="MessageCircle" size={48} className="mx-auto mb-2 opacity-50" />
              <p>–ü–æ—Å—Ç–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ–∫–∞ –Ω–µ—Ç</p>
              <p className="text-sm">–ù–∞–∂–º–∏—Ç–µ "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è</p>
            </div>
          )}
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Settings" />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="p-4 rounded-lg bg-muted/50 space-y-3">
            <p className="text-sm font-medium">–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–π cron-–∑–∞–¥–∞—á—É:</p>
            
            <div className="space-y-2">
              <p className="text-sm text-muted-foreground">1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ cron-job.org</p>
              <p className="text-sm text-muted-foreground">2. –°–æ–∑–¥–∞–π –∑–∞–¥–∞—á—É —Å URL:</p>
              <div className="p-2 bg-background rounded border text-xs font-mono break-all">
                {SCHEDULER_URL}
              </div>
              <p className="text-sm text-muted-foreground">3. –£—Å—Ç–∞–Ω–æ–≤–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 8:00, 14:00, 20:00 (UTC+3)</p>
            </div>

            <div className="flex items-start gap-2 p-3 rounded bg-blue-500/10 border border-blue-500/20">
              <Icon name="Lightbulb" size={16} className="mt-0.5 text-blue-600" />
              <p className="text-sm text-blue-900 dark:text-blue-100">
                <strong>–°–æ–≤–µ—Ç:</strong> –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å GitHub Actions –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π cron-—Å–µ—Ä–≤–∏—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};
